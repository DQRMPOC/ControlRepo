<analytic>
	<analytic>.daas.util.statsUpsert</analytic>
	<code_text>{[dt;tab;granularity;params]
	
	.log.out[.z.h;"Writing to stats HDB";()];
	hdb:":",(string .utils.checkForEnvVar params`directoryPath);
	f:$[granularity=`minute;`$hdb,"/",string[dt],"/",last "." vs string[tab],"/";`$hdb,"/",last "." vs string[tab],"/"];
	$[0=type key f;set[f;.Q.en[`$hdb;get tab]];upsert[f;.Q.en[`$hdb;get tab]]];
	@[`sym`time xasc f;`sym;`p#];
	value "delete ", string[tab], " from `.daas"
}</code_text>
	<description></description>
	<dictionaryparams>0</dictionaryparams>
	<typ>Analytic</typ>
	<private>0</private>
	<returntype></returntype>
	<returndata></returndata>
	<defaultconnection></defaultconnection>
	<alias></alias>
	<analytictype>polling</analytictype>
	<returndescription></returndescription>
	<param>
		<parameter>dt</parameter>
		<default></default>
		<description>symbol</description>
		<required>1</required>
		<datatype>Symbol</datatype>
	</param>
	<param>
		<parameter>tab</parameter>
		<default></default>
		<description>symbol</description>
		<required>1</required>
		<datatype>Symbol</datatype>
	</param>
	<param>
		<parameter>granularity</parameter>
		<default></default>
		<description>default parameter</description>
		<required>1</required>
		<datatype>Symbol</datatype>
	</param>
	<param>
		<parameter>params</parameter>
		<default>
			<dictkey>
				<name>Key</name>
				<datatype>Symbol</datatype>
				<default></default>
				<isrequired>true</isrequired>
				<description></description>
			</dictkey>
		</default>
		<description>default parameter</description>
		<required>1</required>
		<datatype>Dict</datatype>
	</param>
	<analyticgroup>daasUtil</analyticgroup>
</analytic>
