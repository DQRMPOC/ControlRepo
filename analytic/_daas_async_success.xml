<analytic>
	<analytic>.daas.async.success</analytic>
	<code_text>{[params]
/add the return to the cache
.[`.daas.queryCache;(params[`queryNum];`return);,;enlist params[`return]];
if[not .daas.async.failureFlag;
    /flag the cache as partially returned
    .[`.daas.queryCache;(params[`queryNum];`status);:;`Partial];
    ];
/add to the return count
.[`.daas.queryCache;(params[`queryNum];`returnCount);+;1i];

if[`async~params`clientMode;
	if[query[`returnCount]=(query:.daas.queryCache[params`queryNum])`requestCount;
			.daas.async.sendResults[query,`queryNum`tieredQueryNum!(params`queryNum;params`tieredQueryNum)]
		];
	];
}</code_text>
	<description>Update the in memory table with the result of the run and sets the status as completed.</description>
	<dictionaryparams>0</dictionaryparams>
	<typ>Analytic</typ>
	<private>0</private>
	<returntype></returntype>
	<returndata></returndata>
	<defaultconnection></defaultconnection>
	<alias></alias>
	<analytictype>polling</analytictype>
	<returndescription></returndescription>
	<param>
		<parameter>params</parameter>
		<default></default>
		<description>default parameter</description>
		<required>1</required>
		<datatype>Symbol</datatype>
	</param>
	<analyticgroup>daasAsync</analyticgroup>
</analytic>
